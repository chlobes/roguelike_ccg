use crate::prelude::*;

#[derive(Debug,Clone,Serialize,Deserialize)]
pub struct Interrupt {
	card_drawn: (HashMap<u64, FnMut<, >>, ),
}

impl Interrupt {
	pub fn add_card_drawn(, prevent: bool) {
		
	}
	
	pub fn add_card_played(, prevent: bool) {
		
	}
	
	pub fn add_card_discarded(, prevent: bool) {
		
	}
	
	pub fn add_enemy_action(, prevent: bool) {
		
	}
	
	fn card_drawn(&mut self, c: &mut Card, p: &mut Player, es: &mut Vec<Enemy>) -> bool {
		
	}
	
	fn card_played(&mut self, c: &mut Card, p: &mut Player, es: &mut Vec<Enemy>) -> bool {
		
	}
	
	fn card_discarded(&mut self, c: &mut Card, k: bool, p: &mut Player, es: &mut Vec<Enemy>) -> bool {
		
	}
	
	fn enemy_action(&mut self, e: &mut Enemy, p: &mut Player, es: &mut Vec<Enemy>) -> bool {
		
	}
}
